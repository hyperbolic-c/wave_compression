$scope module apci_top $end
$var parameter 32 + CCIX_20G_CLK $end
$var parameter 32 % CCIX_20G_W $end
$var parameter 32 , CCIX_25G_CLK $end
$var parameter 32 & CCIX_25G_W $end
$var parameter 32 ' GEN1_CLK $end
$var parameter 32 ! GEN1_W $end
$var parameter 32 ( GEN2_CLK $end
$var parameter 32 " GEN2_W $end
$var parameter 32 ) GEN3_CLK $end
$var parameter 32 # GEN3_W $end
$var parameter 32 * GEN4_CLK $end
$var parameter 32 $ GEN4_W $end
$var wire 1 4 clk_ref $end
$var wire 1 5 clk_refn $end
$var wire 1 3 clkreq_n $end
$var wire 1 ; phy0_atb_f_p $end
$var wire 1 : phy0_atb_s_m $end
$var wire 1 9 phy0_atb_s_p $end
$var wire 1 7 phy_resref $end
$var reg 1 - pipe_lane_tx_pclk $end
$var reg 1 . pipe_lane_tx_pclk_tmp $end
$var reg 1 8 reset_in $end
$var reg 1 6 resref $end
$var wire 1 1 rx_data $end
$var wire 1 2 rx_datan $end
$var integer 32 < target_speed $end
$var wire 1 / tx_data $end
$var wire 1 0 tx_datan $end

$scope module rc_pif[0] $end
$var reg 1 ] AsyncPowerChangeAck $end
$var reg 1 u BlockAlignControl $end
$var reg 1 G Clk $end
$var reg 2 W DataBusWidth[1:0] $end
$var reg 1 A DynamicPresetCoefUpdates $end
$var reg 9 P ElasticBufferLocation[8:0] $end
$var reg 1 k Elasticity_Buffer_Mode $end
$var reg 1 Z EncodeDecodeBypass $end
$var reg 6 q FS[5:0] $end
$var reg 1 (! GeneratePClk $end
$var reg 1 C GenerateRefClk $end
$var reg 1 y GetLocalPresetCoefficients $end
$var reg 1 x InvalidRequest $end
$var reg 6 r LF[5:0] $end
$var reg 6 ~ LinkEvaluationFeedbackDirectionChange[5:0] $end
$var reg 8 } LinkEvaluationFeedbackFigureMerit[7:0] $end
$var reg 6 #! LocalFS[5:0] $end
$var reg 6 $! LocalLF[5:0] $end
$var reg 5 z LocalPresetIndex[4:0] $end
$var reg 1 !! LocalTxCoefficientsValid $end
$var reg 18 "! LocalTxPresetCoefficients[17:0] $end
$var reg 8 Q M2P_MessageBus[7:0] $end
$var parameter 4 = MAX_DATA_WIDTH[3:0] $end
$var reg 1 ^ MaxPclk $end
$var reg 1 ? NoRxStandy $end
$var reg 1 E NominalEmptyBuffer $end
$var reg 8 R P2M_MessageBus[7:0] $end
$var reg 1 H Pclk $end
$var reg 1 > PclkAsPhyInput $end
$var reg 1 \ PclkChangeAck $end
$var reg 1 [ PclkChangeOk $end
$var reg 3 V PclkRate[2:0] $end
$var reg 1 m PhyStatus $end
$var reg 1 D PipeCheck $end
$var reg 1 F PipeV5 $end
$var reg 4 d PowerDown[3:0] $end
$var reg 3 e Rate[2:0] $end
$var reg 1 c Reset_ $end
$var reg 8 M RxDataK[7:0] $end
$var reg 1 N RxDataValid $end
$var reg 64 L RxData[63:0] $end
$var reg 1 S RxEIDetectDisable $end
$var reg 1 n RxElecIdle $end
$var reg 1 s RxEqEval $end
$var reg 1 t RxEqInProgress $end
$var reg 1 j RxEqTraining $end
$var reg 1 b RxPolarity $end
$var reg 3 p RxPresetHint[2:0] $end
$var reg 1 X RxStandby $end
$var reg 1 Y RxStandbyStatus $end
$var reg 1 B RxStandbyasRxElecIdle $end
$var reg 1 | RxStartBlock $end
$var reg 1 *! RxStartBlockHigh $end
$var reg 3 o RxStatus[2:0] $end
$var reg 2 { RxSyncHeader[1:0] $end
$var reg 1 l RxValid $end
$var reg 1 O SRISEnable $end
$var reg 1 T TxCommonModeDisable $end
$var reg 1 a TxCompliance $end
$var reg 8 J TxDataK[7:0] $end
$var reg 1 K TxDataValid $end
$var reg 64 I TxData[63:0] $end
$var reg 18 f TxDeemph[17:0] $end
$var reg 1 _ TxDetectRx $end
$var reg 1 ` TxElecIdle $end
$var reg 3 g TxMargin[2:0] $end
$var reg 1 i TxOnesZeros $end
$var reg 1 v TxStartBlock $end
$var reg 1 +! TxStartBlockHigh $end
$var reg 1 h TxSwing $end
$var reg 2 w TxSyncHeader[1:0] $end
$var reg 1 @ UseFigureMerit $end
$var reg 2 U Width[1:0] $end
$var reg 4 0! blk128_index[3:0] $end
$var wire 1 &! clkreq_in_n $end
$var reg 1 %! clkreq_out_n $end
$var integer 32 8! current_ppm $end
$var reg 1 5! gen_ref_clk $end
$var real 64 6! half $end
$var real 64 7! half2 $end
$var reg 8 /! ltssm_rx[7:0] $end
$var reg 8 .! ltssm_tx[7:0] $end
$var reg 32768 1! mac_reg[32767:0] $end
$var reg 1 )! pclk_ext $end
$var time 64 4! ref_clk_ui_half $end
$var reg 64 3! rxdata_after_descrambled[63:0] $end
$var reg 183 ,! side_band[182:0] $end
$var reg 1 '! stop_ref_clk $end
$var reg 64 2! txdata_before_scrambled[63:0] $end
$var reg 4 -! user_rx_info[3:0] $end
